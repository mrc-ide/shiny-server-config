#!/usr/bin/env Rscript
"Usage:
  add_deploy_key [--overwrite] <repo>" -> USAGE


add_deploy_key <- function(user_repo, overwrite = FALSE) {
  user_repo <- "mrc-ide/eppasmviewer"
  re <- "^([^/]+)/([^/]+)$"
  if (!grepl(re, user_repo)) {
    stop("Expected 'repo' in the format username/repo")
  }
  user <- sub(re, "\\1", user_repo)
  repo <- sub(re, "\\2", user_repo)

  vault_root <- Sys.getenv("VAULT_ROOT")

  url_key <- sprintf("https://github.com/%s/settings/keys/new", user_repo)
  vault_path <- sprintf("%s/deploy-keys/%s", vault_root, user_repo)

  vault <- vaultr::vault_client(quiet = TRUE)

  if (!is.null(vault$read(vault_path)) && !overwrite) {
    message(sprintf("Deploy key already exists for '%s'", user_repo))
    message(sprintf("Public key is:\n\n%s", vault$read(vault_path, "pub")))
    return()
  }

  key <- openssl::rsa_keygen()
  str_key <- openssl::write_pem(key, NULL)
  str_pub <- openssl::write_ssh(key, NULL)
  data <- list(key = str_key, pub = str_pub)

  message(sprintf("Writing keys to vault at '%s'", vault_path))
  vault$write(vault_path, data)
  message(sprintf("Add the public key to github at\n  %s\n", url_key))
  message(sprintf("with content:\n\n%s\n", data$pub))
  ## TODO: more config here?
  message("and title 'mrc-ide-shiny'")
}


main <- function() {
  args <- docopt::docopt(USAGE)
  add_deploy_key(args$user_repo, args$overwrite)
  invisible()
}


main()
